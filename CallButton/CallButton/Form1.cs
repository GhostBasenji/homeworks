// На форме имеем две кнопки. Щелчок на первой кнопке вызывает появление окна с сообщением о произошедшем событии нажатия первой 
// кнопки. Щелкая на второй кнопке, мы имитируем нажатие первой кнопки путем программного вызова события нажатия первой кнопки 

namespace CallButton
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Произошло событие \"щелчок на первой кнопке\"");
        }

        private void button2_Click(object sender, EventArgs e)
        {
            // Здесь программно вызываем событие "нажатие на первую кнопку", хотя щелкнули на второй кнопке:
            button1.PerformClick();

            // То же самое можно сделать так:
            // button1_Click(null, null);
            // или так:
            // button1_Click(button1, EventArgs.Empty);
        }
    }
}


// При обработке события "щелчок на второй кнопке" мы вызвали событие "щелчок на первой кнопке". В комментарии
// указали варианты вызова этого события другими способами. Это открывает возможность использования приведенной
// методики и для других элементов управления, не имеющих прямого метода вызова соответствующего события наподобие PerformClick.