// В векторных чертежах графическим примитивом называют элементарные составляющие чертежа: отрезок, дугу, символ, окружность и др.
// Здесь мы имеем дело с растровой графикой, но в данном случае подход тот же — по координатам рисуем те же фигуры. Система координат
// такая: начало координат — это левый верхний угол формы, ось Ox направлена вправо, а Oy — вниз.
// Наша задача состоит в том, чтобы рисовать в форме окружность, отрезок, прямоугольник, сектор, текст, эллипс и закрашенный сектор. Выбор
// того или иного графического примитива осуществляется через элемент управления ListBox (Список). Причем при рисовании очередного графического
// примитива нужно "стереть" предыдущий рисунок. 

namespace DrawShapes
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.Text = "Выбери графический примитив";
            var Spisok = new Object[] {
            "Окружность", "Отрезок", "Прямоугольник", "Сектор", "Текст", "Эллипс", "Закрашенный сектор"};
            listBox1.Items.AddRange(Spisok);
            Font = new Font("Times New Roman", 12);
        }

        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            // Создаем графический объект
            var Grafika = CreateGraphics();
            // Создаем перо для рисования им фигур
            var Pen = new Pen(Color.Red);
            // Создаем кисть для "закрашивания" фигур
            var Brush = new SolidBrush(Color.Red);
            // Очищаем область рисования путем ее окрашивания в первоначальный цвет формы
            Grafika.Clear(SystemColors.Control);
            // или Grafika.Clear(Color.FromName("Control")); 
            // или Grafika.Clear(ColorTranslator.FromHtml("#F0F0F0"));
            switch (listBox1.SelectedIndex) // Выбираем фигуру:
            {
                case 0: // Окружность
                    Grafika.DrawEllipse(Pen, 50, 50, 150, 150); break;
                case 1: // Отрезок
                    Grafika.DrawLine(Pen, 50, 50, 200, 200); break;
                case 2: // Прямоугольник
                    Grafika.DrawRectangle(Pen, 50, 30, 150, 180); break;
                case 3: // Сектор
                    Grafika.DrawPie(Pen, 40, 50, 200, 200, 180, 225); break;
                case 4: // Текст
                    Grafika.DrawString("Каждый во что-то верит, но" + "\n" + "жизнь преподносит сюрпризы",
                        Font, Brush, 10, 100); break;
                case 5: // Эллипс
                    Grafika.DrawEllipse(Pen, 30, 30, 150, 200); break;
                case 6: // Закрашенный сектор
                    Grafika.FillPie(Brush, 20, 50, 150, 150, 0, 45); break;
            }
        }
    }
}


// В программе, обрабатывая событие изменения выбранного индекса в списке listBox1, создаем графический объект Графика, перо для рисования им
// фигур и кисть для "закрашивания" ею фигур. Далее очищаем область рисования путем окрашивания формы в первоначальный цвет "Control" или
// "#F0F0F0" (как записано в комментарии), используя метод Clear() объекта Grafika: Grafika.Clear(SystemColors.Control);
// При очищении области рисования оставляем цвет формы первоначальным — "Control". Кстати, этот цвет можно назвать цветом Microsoft.
// После очистки формы, используя свойство SelectIndex, которое указывает на номер выбранного пользователем элемента списка (от 0 до 6), рисуем
// выбранную фигуру. Далее оператор switch осуществляет множественный выбор графического примитива в зависимости от индекса выбранного элемента
// списка SelectedIndex. Оператор switch case передает управление той или иной метке case. 
// ВНИМАНИЕ! Оператор множественного выбора в C#, как говорят программисты, "проваливается" — т. е. управление, зайдя на какую-либо метку case,
// переходит на следующую метку, поэтому приходится использовать оператор break.