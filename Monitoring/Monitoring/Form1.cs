// Программа отображает координаты курсора мыши относительно экрана и элемента управления. Программа содержит форму, список элементов ListBox
// и два текстовых поля. Программа заполняет список ListBox данными о местоположении и изменении положения курсора мыши. Кроме того,  в текстовых
// полях отображаются координаты положения курсора мыши относительно экрана и элемента управления ListBox 

namespace Monitoring
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();            
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            base.Text = "Мониторинг движения мыши";
        }

        private void listBox1_MouseEnter(object sender, EventArgs e)
        {
            // Процедура обработки события, когда курсор мыши входит в видимую часть элемента управления ListBox:
            // ~~~~~~~~~~
            // Добавляем в список элементов новую запись
            listBox1.Items.Add("Курсор мыши вошел в область ListBox");
        }

        private void listBox1_MouseLeave(object sender, EventArgs e)
        {
            // Процедура обработки события, когда курсор мыши покидает видимую часть элемента управления ListBox:
            listBox1.Items.Add("Курсор мыши покинул область ListBox");
        }

        private void listBox1_MouseMove(object sender, MouseEventArgs e)
        {
            // Процедура обработки события, происходящего при перемещенииуказателя мыши на элементе управления ListBox: 
            // ~ ~ ~ ~ ~ ~ ~ ~ 
            // Свойство объекта Control MousePosition возвращает точку, соответствующую текущему положению мыши относительно 
            // левого верхнего угла монитора
            
            textBox1.Text = String.Format("X={0} или {1}", Control.MousePosition.X, e.X);
            textBox2.Text = String.Format("Y={0} или {1}", Control.MousePosition.Y, e.Y);
        }
    }
}




// При обработке события мыши MouseEnter, когда курсор мыши входит в границы элемента управления, в список listBox1 добавляется (метод Add) запись "Курсор
// мыши вошел в область ListBox". При обработке события мыши MouseLeave, когда курсор мыши выходит за пределы элемента управления, в список ListBox добавляется
// запись "Курсор мыши вышел из области ListBox". Таким образом, отслеживая поведение мыши, мы заполняем список listBox1.
// 
// При обработке события MouseMove, когда курсор мыши перемещается в пределах элемента управления listBox1, в текстовые поля записываем координаты X и Y курсора 
// мыши, пользуясь свойством объекта Control.MousePosition. Здесь мы получаем координаты положения курсора мыши в системе координат экрана, когда начало координат
// расположено в левом верхнем углу экрана, ось х направлена вправо, а ось y — вниз.
// Заметим, что аргументы события мыши e также содержат в себе текущие координаты курсора мыши, но в системе координат элемента управления, в данном случае listBox1.
// Начало координат этой системы расположено в левом верхнем углу элемента управления listBox1, ось х также направлена вправо, ось y — вниз. Эти координаты получаем 
// из аргументов события e.X и e.Y и выводим их в текстовое поле, отделяя от предыдущих координат словом "или".
// Таким образом, добиваемся контроля положения курсора мыши, обрабатывая события мыши.