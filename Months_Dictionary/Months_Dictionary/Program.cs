// Словарь данных Dictionary представляет собой совокупность (коллекцию) ключей и значений. То есть каждый элемент (запись), добавляемый в словарь, состоит из значения
// Value и связанного с ним ключа Key. Извлечение значения по его ключу происходит очень быстро, поскольку класс Dictionary<Key, Value> реализован как хэш-таблица. 
// Каждый ключ в словаре Dictionary<Key, Value> должен быть уникальным, т. е. единственным в своем роде, эксклюзивным. При добавлении в коллекцию Dictionary очередного
// элемента т.н. компаратор проверяет на равенство уникальность нового ключа. Ключ не может быть пустым (null), а значение — может, если тип значения Value является ссылочным типом.
// Возможно создание словаря, в котором не различается регистр символов. Использование словаря Dictionary может существенно повлиять на эффективность алгоритма, на простоту
// его понимания и легкость программной реализации.

// Программа создает словарь данных типа Dictionary и записывает в этот словарь названия месяцев и количество дней в каждом месяце. Ключом 
// словаря является название месяца, а значением — количество дней. 
// Используя цикл foreach, программа выводит на консоль только те месяцы, количество дней в которых равно 30 

// Задаем цвет текста на консоль для большей выразительности:
Console.ForegroundColor = ConsoleColor.White;
Console.Title = "Использование словаря Dictionary";

// Создаем словарь данных с полями типа string и int:
var Months = new Dictionary<string, int>();

// Инициализировать словарь месяцев можно так: 
//  Месяцы["Январь"] = 31;    Месяцы["Июль"] = 31; 
//  Месяцы["Февраль"] = 29;   Месяцы["Август"] = 31; 
//  Месяцы["Март"] = 31;      Месяцы["Сентябрь"] = 30; 
//  Месяцы["Апрель"] = 30;    Месяцы["Октябрь"] = 31; 
//  Месяцы["Май"] = 31;       Месяцы["Ноябрь"] = 30; 
// можно так: 
//  Месяцы.Add("Июнь", 30);   Месяцы.Add("Декабрь", 31); 
// А МОЖНО БОЛЕЕ ИНТЕРЕСНО: 
//  Инициализация словаря месяцев 
for (int i = 0; i <= 11; i++)
{
    Months.Add(
        System.Globalization.CultureInfo.CurrentUICulture.
        DateTimeFormat.MonthNames[i],
        DateTime.DaysInMonth(2025, i + 1));
}

Console.WriteLine("Месяцы с 30 днями:");
Console.WriteLine(" ");
// Поиск в словаре месяцев месяцев с 30 днями:
foreach (KeyValuePair<string, int> Month in Months)
{
    if (Month.Value == 30)
    {
        Console.WriteLine("{0} - {1} дней", Month.Key, Month.Value);
        // Ждем от пользователя нажатия какой-либо клавиши:
        Console.ReadKey();
    }
}


// В коде вначале создаем объект класса Dictionary, т. е. словарь данных с полями типа String — для названий месяцев и типа Int32 — для количества дней.
// Инициализация словаря, т. е. присвоение начальных значений здесь очень удобная, название месяца выступает в роли "индекса", если использовать терминологию массивов.
// Поиск в словаре месяцев, содержащий 30 дней, мы организовали с помощью цикла foreach. Здесь использована системная структура KeyValuePair (пара "ключ — значение"),
// предназначенная именно для манипуляций со словарем, хотя ее можно использовать и в других случаях.