// Программа разрешает ввод в текстовое поле только цифровых символов, а также разделителя целой и дробной частей числа (т. е. точки или запятой) 
// ~ ~ ~ ~ ~ ~ ~ ~ 
// Разделитель целой и дробной частей числа может быть точкой "." или запятой "," в зависимости от установок в пункте Язык и региональные стандарты 
// Панели управления ОС Windows

namespace OnlyNumber2
{
    public partial class Form1 : Form
    {
        String DotOrComma;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.Text = "Введите число";
            // Выясняем, что установлено на данном ПК в качестве разделителя целой и дробной частей: точка или запятая
            DotOrComma = System.Globalization.NumberFormatInfo.CurrentInfo.NumberDecimalSeparator;
        }

        private void textBox1_KeyPress(object sender, KeyPressEventArgs e)
        {
            var DotOrCommaFound = false;
            // Разрешаем вводить десятичных цифр:
            if (Char.IsDigit(e.KeyChar) == true) return;
            // Разрешаем ввод клавиши BackSpace:
            if (e.KeyChar == Convert.ToChar(Keys.Back)) return;
            // Ищем DotOrComma в textBox1
            // Если IndexOf() == -1, то DotOrComma не найдена:
            if (textBox1.Text.IndexOf(DotOrComma) != -1)
                DotOrCommaFound = true;
            // Если DotOrComma уже есть в textBox, то запрещаем вводить и ее, и любые другие символы:
            if (DotOrCommaFound == true) { e.Handled = true; return; }
            // Если DotOrComma еще нет в textBox, то разрешаешь ее ввод:
            if (e.KeyChar.ToString() == DotOrComma) return;
            // В других случаях - запрет на ввод:
            e.Handled = true;
        }
    }
}


// Как видно из кода, вначале выясняем, что установлено в данной системе  в качестве разделителя целой и дробной части: точка или запятая.
// Этот разделитель записываем в строковую переменную ТчкИлиЗпт, которая видна из всех процедур данной программы, поскольку объявлена вне
// всех процедур. Далее в процедуре обработки события KeyPress разрешаем ввод десятичных цифр и нажатие клавиши <Backspace> путем обхода с
// помощью оператора Return последнего оператора процедуры e.Handled = True, запрещающего ввод символа в текстовое поле. 

// В рассмотренной задаче присутствует определенная проблема с разрешением ввода разделителя целой и дробной частей, поскольку разрешить его ввод мы можем только
// один раз, но при этом надо иметь в виду, что пользователь может этот разделитель удалить и ввести его в другом месте числовой строки. Эту проблему мы решили
// следующим образом — каждый раз при очередном нажатии клавиши, разрешив ввод десятичных цифр, ищем в текстовом поле разделитель. Если он найден, то запрещаем
// ввод любых нецифровых символов, включая злосчастный разделитель. А если не найден, то разрешаем его ввод.